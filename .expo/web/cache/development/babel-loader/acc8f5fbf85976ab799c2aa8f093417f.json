{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/razu/projects/expo-projects/mythicplus-app/components/SearchableDropdown.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { Icon } from \"react-native-elements\";\nimport { useState } from \"react\";\nimport realmList from \"../data/realms\";\nimport { useRef } from \"react\";\nimport fetchCharacterData from \"../data/getters/characterInfo\";\nvar data = realmList;\n\nvar SearchableDropdown = function SearchableDropdown(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setIsFocused = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      valueOne = _useState4[0],\n      setValueOne = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      valueTwo = _useState6[0],\n      setValueTwo = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      items = _useState8[0],\n      setItems = _useState8[1];\n\n  var inputEl = useRef(null);\n\n  var verificationChecker = function verificationChecker() {\n    if (valueOne.length >= 2 && valueTwo.length >= 2) {\n      return \"#36a84d\";\n    }\n\n    return \"#3776A8\";\n  };\n\n  var onValueSelect = function onValueSelect(selection) {\n    setValueOne(selection);\n    inputEl.current.focus();\n\n    if (isFocused === true) {\n      setIsFocused(false);\n    }\n  };\n\n  var onInputChange = function onInputChange(e) {\n    if (e === \" \") {\n      setItems([]);\n    }\n\n    setValueOne(e);\n    var temp = [];\n    data.forEach(function (item) {\n      if (item.slice(0, valueOne.length) === valueOne) {\n        temp.push(item);\n      }\n    });\n    setItems(temp);\n  };\n\n  var onSearchPress = function onSearchPress() {\n    var queryData;\n    return _regeneratorRuntime.async(function onSearchPress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            queryData = {\n              realm: valueOne,\n              name: valueTwo\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetchCharacterData(queryData).then(function (res) {\n              return res.json();\n            }).then(function (result) {\n              return props.updater(result);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      position: \"absolute\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: _objectSpread({}, styles.input),\n    placeholder: props.placeholderOne ? props.placeholderOne : \"Search\",\n    placeholderTextColor: \"#828181\",\n    value: valueOne,\n    onChangeText: function onChangeText(e) {\n      return onInputChange(e);\n    },\n    onFocus: function onFocus() {\n      return setIsFocused(true);\n    },\n    onBlur: function onBlur() {\n      return setIsFocused(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: _objectSpread({}, styles.input),\n    autoCorrect: false,\n    placeholder: props.placeholderTwo ? props.placeholderTwo : \"Search\",\n    placeholderTextColor: \"#828181\",\n    value: valueTwo,\n    onChangeText: setValueTwo,\n    ref: inputEl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), verificationChecker() == \"#36a84d\" ? React.createElement(Icon, {\n    name: \"search\",\n    type: \"material\",\n    color: \"#3776A8\",\n    style: styles.searchIcon,\n    onPress: onSearchPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }) : React.createElement(ActivityIndicator, {\n    style: styles.activity,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.statusBar), {}, {\n      backgroundColor: verificationChecker()\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.popout), {}, {\n      display: isFocused && items.length > 0 ? \"flex\" : \"none\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, items.map(function (item) {\n    return React.createElement(TouchableHighlight, {\n      key: item,\n      onPress: function onPress() {\n        return onValueSelect(item);\n      },\n      style: styles.popoutOption,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.popoutOptionText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, item));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    margin: 0,\n    padding: 15,\n    backgroundColor: \"#0e1014\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"98%\",\n    zIndex: 1\n  },\n  statusBar: {\n    height: 5\n  },\n  input: {\n    fontSize: 16,\n    padding: 10,\n    backgroundColor: \"#181C24\",\n    fontFamily: \"Helvetica\",\n    fontWeight: \"400\",\n    borderRadius: 5,\n    color: \"white\",\n    width: \"40%\"\n  },\n  searchIcon: {\n    padding: 7,\n    backgroundColor: \"#181C24\",\n    borderRadius: 5\n  },\n  activity: {\n    padding: 9\n  },\n  popout: {\n    backgroundColor: \"#0e1014\",\n    width: \"37.5%\",\n    position: \"absolute\",\n    marginTop: 60,\n    marginLeft: 15,\n    padding: 5,\n    zIndex: 1,\n    borderRadius: 5\n  },\n  popoutOption: {\n    color: \"white\",\n    padding: 8,\n    backgroundColor: \"#181C24\",\n    borderBottomColor: \"#0e1014\",\n    borderBottomWidth: 4,\n    borderRadius: 5\n  },\n  popoutOptionText: {\n    color: \"white\",\n    fontSize: 15,\n    fontFamily: \"Helvetica\",\n    fontWeight: \"400\"\n  }\n});\nexport default SearchableDropdown;","map":{"version":3,"sources":["/Users/razu/projects/expo-projects/mythicplus-app/components/SearchableDropdown.tsx"],"names":["React","Icon","useState","realmList","useRef","fetchCharacterData","data","SearchableDropdown","props","isFocused","setIsFocused","valueOne","setValueOne","valueTwo","setValueTwo","items","setItems","inputEl","verificationChecker","length","onValueSelect","selection","current","focus","onInputChange","e","temp","forEach","item","slice","push","onSearchPress","queryData","realm","name","then","res","json","result","updater","position","styles","container","input","placeholderOne","placeholderTwo","searchIcon","activity","statusBar","backgroundColor","popout","display","map","popoutOption","popoutOptionText","StyleSheet","create","margin","padding","flexDirection","justifyContent","width","zIndex","height","fontSize","fontFamily","fontWeight","borderRadius","color","marginTop","marginLeft","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n    StyleSheet,\n    TextInput,\n    View,\n    Text,\n    ActivityIndicator,\n    Button,\n    TouchableHighlight,\n} from \"react-native\"\nimport { Icon, withTheme } from \"react-native-elements\"\nimport { useState } from \"react\"\nimport realmList from \"../data/realms\"\nimport { useRef } from \"react\"\nimport fetchCharacterData from \"../data/getters/characterInfo\"\nimport { info } from \"console\"\n\nconst data = realmList\n\nconst SearchableDropdown = (props) => {\n    const [isFocused, setIsFocused] = useState(false)\n    const [valueOne, setValueOne] = useState(\"\")\n    const [valueTwo, setValueTwo] = useState(\"\")\n    const [items, setItems] = useState([])\n\n    const inputEl = useRef(null)\n\n    const verificationChecker = () => {\n        if (valueOne.length >= 2 && valueTwo.length >= 2) {\n            return \"#36a84d\"\n        }\n        return \"#3776A8\"\n    }\n\n    const onValueSelect = (selection) => {\n        setValueOne(selection)\n        inputEl.current.focus()\n        if (isFocused === true) {\n            setIsFocused(false)\n        }\n    }\n\n    const onInputChange = (e: any) => {\n        if (e === \" \") {\n            setItems([])\n        }\n        setValueOne(e)\n        let temp: string[] | [] = []\n        data.forEach((item: string) => {\n            if (item.slice(0, valueOne.length) === valueOne) {\n                temp.push(item)\n            }\n        })\n        setItems(temp)\n    }\n    const onSearchPress = async () => {\n        const queryData = {\n            realm: valueOne,\n            name: valueTwo,\n        }\n        await fetchCharacterData(queryData)\n            .then((res) => res.json())\n            .then((result) => props.updater(result))\n    }\n    return (\n        <View\n            style={{\n                position: \"absolute\",\n            }}\n        >\n            <View style={styles.container}>\n                <TextInput\n                    style={{\n                        ...styles.input,\n                    }}\n                    placeholder={\n                        props.placeholderOne ? props.placeholderOne : \"Search\"\n                    }\n                    placeholderTextColor=\"#828181\"\n                    value={valueOne}\n                    onChangeText={(e) => onInputChange(e)}\n                    onFocus={() => setIsFocused(true)}\n                    onBlur={() => setIsFocused(false)}\n                />\n                <TextInput\n                    style={{\n                        ...styles.input,\n                    }}\n                    autoCorrect={false}\n                    placeholder={\n                        props.placeholderTwo ? props.placeholderTwo : \"Search\"\n                    }\n                    placeholderTextColor=\"#828181\"\n                    value={valueTwo}\n                    onChangeText={setValueTwo}\n                    ref={inputEl}\n                />\n                {verificationChecker() == \"#36a84d\" ? (\n                    <Icon\n                        name=\"search\"\n                        type=\"material\"\n                        color=\"#3776A8\"\n                        style={styles.searchIcon}\n                        onPress={onSearchPress}\n                    />\n                ) : (\n                    <ActivityIndicator style={styles.activity} />\n                )}\n            </View>\n            <View\n                style={{\n                    ...styles.statusBar,\n                    backgroundColor: verificationChecker(),\n                }}\n            >\n                <Text></Text>\n            </View>\n            <View\n                style={{\n                    ...styles.popout,\n                    display: isFocused && items.length > 0 ? \"flex\" : \"none\",\n                }}\n            >\n                {items.map((item) => {\n                    return (\n                        <TouchableHighlight\n                            key={item}\n                            onPress={() => onValueSelect(item)}\n                            style={styles.popoutOption}\n                        >\n                            <Text style={styles.popoutOptionText}>{item}</Text>\n                        </TouchableHighlight>\n                    )\n                })}\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        margin: 0,\n        padding: 15,\n        backgroundColor: \"#0e1014\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        width: \"98%\",\n        zIndex: 1,\n    },\n    statusBar: {\n        height: 5,\n    },\n    input: {\n        fontSize: 16,\n        padding: 10,\n        backgroundColor: \"#181C24\",\n        fontFamily: \"Helvetica\",\n        fontWeight: \"400\",\n        borderRadius: 5,\n        color: \"white\",\n        width: \"40%\",\n    },\n    searchIcon: {\n        padding: 7,\n        backgroundColor: \"#181C24\",\n        borderRadius: 5,\n    },\n    activity: {\n        padding: 9,\n    },\n    popout: {\n        backgroundColor: \"#0e1014\",\n        width: \"37.5%\",\n        position: \"absolute\",\n        marginTop: 60,\n        marginLeft: 15,\n        padding: 5,\n        zIndex: 1,\n        borderRadius: 5,\n    },\n    popoutOption: {\n        color: \"white\",\n        padding: 8,\n        backgroundColor: \"#181C24\",\n        borderBottomColor: \"#0e1014\",\n        borderBottomWidth: 4,\n        borderRadius: 5,\n    },\n    popoutOptionText: {\n        color: \"white\",\n        fontSize: 15,\n        fontFamily: \"Helvetica\",\n        fontWeight: \"400\",\n    },\n})\n\nexport default SearchableDropdown\n"]},"metadata":{},"sourceType":"module"}